/**
 * Grid Definition Area
 */

 .grid {
  display: grid;
  /*grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));*/
  grid-template-columns: repeat(var(--grid-cols), 1fr);
  width: max-content;
  height: max-content;
  grid-gap: 8px;

  --activeRow: 0;
  --activeColumn: 0;
  --activeCube: 0;
  --activeIndex: 0;
}

.tile {
  /* Active Row */
  --isNotRowHighlight: min(
    calc((var(--activeRow) - var(--row)) * (var(--activeRow) - var(--row))),
    1
  );
  --isRowHighlight: calc(1 - var(--isNotRowHighlight));

  /* Active Column */
  --isNotColHighlight: min(
    calc(
      (var(--activeColumn) - var(--column)) *
        (var(--activeColumn) - var(--column))
    ),
    1
  );
  --isColHighlight: calc(1 - var(--isNotColHighlight));

  /* Active Cube */
  --isNotCubeHighlight: min(
    calc((var(--activeCube) - var(--cube)) * (var(--activeCube) - var(--cube))),
    1
  );
  --isCubeHighlight: calc(1 - var(--isNotCubeHighlight));

  /* Active Index */
  --isNotActiveIndex: min(
    calc(
      (var(--activeIndex) - var(--index)) * (var(--activeIndex) - var(--index))
    ),
    1
  );
  --isActiveIndex: calc(1 - var(--isNotActiveIndex));

  /* Is Active */
  /* --isActive: min(
    calc(var(--isRowHighlight) + var(--isColHighlight)+ var(--isCubeHighlight)),
    1
  );*/

  /* prettier-ignore */
  --isActive: calc(
    (1 -
      (
        (1 - var(--isRowHighlight)) * 
        (1 - var(--isColHighlight)) *
        (1 - var(--isCubeHighlight))
      )
    ) * var(--isNotActiveIndex)
  );
  --isNotActive: calc(1 - var(--isActive));

  /* activeRow - row = 0, wenn active row*/
  --defaultColor: rgba(180, 180, 180, 1);

  /* prettier-ignore */
  --r: calc(180 * var(--isNotActive) + calc(60 * var(--isActive)) + calc(255 * var(--isActiveIndex)) );

  /* prettier-ignore */
  --g: calc(180 * var(--isNotActive) + calc(100 * var(--isActive)) + calc(255 * var(--isActiveIndex)) );

  /* prettier-ignore */
  --b: calc(180 * var(--isNotActive) + calc(255 * var(--isActive)) + calc(0 * var(--isActiveIndex)) );

  /* prettier-ignore */
  --a: 1;
  background-color: rgba(var(--r), var(--g), var(--b), var(--a));

  text-align: center;
  width: 5vh;
  height: 5vh;
}

.tile::after {
  content: 'IsActive: ' var(--isActive);
}

/**
 * Body Definitions
 */

body {
  position: relative;
}

h1,
h2 {
  font-family: Lato;
}

.toolbar {
  margin-bottom: 10px;
}

/**
 * CSS Custom Property Typings
 */

/* Props on each tile */
@property --row {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --column {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --cube {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

@property --index {
  syntax: '<number>';
  inherits: false;
  initial-value: 0;
}

/* Props on grid */
@property --activeRow {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --activeColumn {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --activeCube {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}

@property --activeIndex {
  syntax: '<number>';
  inherits: true;
  initial-value: 0;
}
